[["index.html", "An Introduction to R for Data Science Chapter 1 About 1.1 Usage", " An Introduction to R for Data Science Eric Odongo 2025-03-22 Chapter 1 About This is an introductory text to programming in R. In this text you will learn about R, how to install it and how to use it effectively in your data science tasks. 1.1 Usage This book was originally meant to be used as a learning resource for students at EPM Square Analytics but it might evolve over time to include many topics relevant to anyone willing to learn R and apply to their unique use cases. If you want to view our other services that we offer at EPM please visit our website: https://epm-square-analytics.netlify.app/ "],["introduction-to-r.html", "Chapter 2 Introduction to R 2.1 R Basics", " Chapter 2 Introduction to R This is an introductory module in which we will learn the basics of R/Rstudio from installation to loading your first data file into R. R is a high level language that was developed by statisticians and was meant for statisticians. The two statisticians who came up with the language are Rose Ihaka and Robert Gentleman from the University of Auckland Australia. Since its implementation it has gained popularity over time by find use cases in new emerging fields like Data Science and lately in the Pharmaceutical industry now sharing almost an equal place with SAS (Statistical Analysis System) which has been the standard programming language in the Pharma industry for a very long time. What makes R powerful is the idea of packages which is simply a collection of functions and data that have been packaged in a way that makes it easy for use and share with the large community. You will learn how to install and load packages in this module. For those who will advance in the series, you might as well learn how to create them as well. 2.1 R Basics 2.1.1 Installation for both R and Rstudio The best way to learn programming in any language is through practice, and R is no different, therefore, I highly recommend you download both R and Rstudio before proceeding to other sections of the book. R is the programming language while Rstudio is an interface/editor that helps you to program in R. You can do without it but having it will greatly improve your productivity. There are a plethora of editors to choose from ranging from VS Code to the more modern ones like Positron but in this book I will be using Rstudio. You are free to explore other editors in your own free time. Install R software: https://cran.r-project.org/bin/windows/base/ Install Rstudio: https://posit.co/download/rstudio-desktop/ 2.1.2 Introduction to Rstudio Interface Familiarize with the Rstudio user interface which we will use heavily. There are other editors that you can use like VS code, but Rstudio is widely used in the industry. Make use of the menu bar at the top to navigate between various tasks eg opening a new R script, restarting an R session among other activities. 2.1.3 Data types We need to understand basic data types before delving into complicated data structures. This will serve as a foundation to our future analysis of data in various contexts. There are two main categories of data types, simple data types and compound data types. Simple data types include, character, numeric, Boolean, complex, and raw data types while complex data types include lists, data frames environments etc. 2.1.3.1 Character data type This contain text data. You enclose them with either single or double quotes. character1 &lt;- &#39;Cow&#39; character1 ## [1] &quot;Cow&quot; character2 &lt;- &#39;Man&#39; character2 ## [1] &quot;Man&quot; 2.1.3.2 Numeric data type We have two sub-classes under this data type; integer and double/float. Integers are whole numbers without the decimal part while doubles or floats contain decimals. To create them we simply assign them to a variable without quotation marks as below. # create an integer int_number &lt;- 4L int_number ## [1] 4 # create a float float_number &lt;- 3.24 float_number ## [1] 3.24 2.1.3.3 Boolean data type 2.1.4 R packages A brief introduction to what packages are, how to install and load them into the system. (we will not cover how to make your own package at this stage yet). An R package is a fundamental unit of R code, with a package you can easily share your work with other people who might be interested in using functions within your package. Most R packages are hosted on CRAN (Comprehensive R Archive Network), though we have other hosting places for R packages like Github or BioConductor. For our purposes in this book we shall only use packages from CRAN and in few cases use packages from GitHub. There are two ways of installing packages; either via the graphical user interface in Rstudio or by writing code within R. If we want to install via code we simply issue the command below either in the console or in an R script. install.packages(&#39;package_name&#39;) # package_name is the actual name of the package you want to install 2.1.5 Data Import from various sources How do you get your data into the R system. There are various ways of achieving this. We shall sample few methods. We have R base functions for achieving this and we also have functions from packages like readr or haven that we can use. "],["programming-with-r.html", "Chapter 3 Programming with R 3.1 Compund data structures in detail", " Chapter 3 Programming with R 3.1 Compund data structures in detail We will look at compound data structures which we will use heavily in going deeper with our programming adventure. These compound data structures include vectors, lists, and data frames. "],["doing-data-science-with-r.html", "Chapter 4 Doing Data Science with R", " Chapter 4 Doing Data Science with R "],["communicate-with-r.html", "Chapter 5 Communicate with R", " Chapter 5 Communicate with R "],["references.html", "Chapter 6 References", " Chapter 6 References https://rstudio-education.github.io/hopr/ "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
